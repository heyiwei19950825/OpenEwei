<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/9/12
 * Time: 14:32
 */

namespace app\api\controller;


use org\Helper;
use think\Controller;
use think\Db;
use app\common\model\User as commonUser;
use org\WeChat\WXBizDataCrypt;

class User extends Controller
{
    protected $user;
    protected $config;
    protected $userLog;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->config = model('admin/Config');
        $this->userLog = model('admin/userLog');
        $this->user = new commonUser();
    }
    /**
     * 获取用户openid
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function userLogin(){
        $userData = $result = [];
        $params = $this->request->post();
        $row = $this->getUserWeChatInfo($params,false);
        //通过OPENid检查用户是否存在 不存在创建用户
        $userInfo   = json_decode($params['userInfo'],true);
        $userRow  = $this->user->field('id,username,sex,province,profile,wx_openid,mobile')->where(['wx_openid'=>$row['openid']])->find();

        if($userRow){
            $userData['username']       = $userInfo['nickName'];
            $userData['province']       = $userInfo['avatarUrl'];
            $userData['update_time']    = time();

            $this->user->where(['wx_openid'=>$row['openid']])->update($userData);
            $result = [
                'error'   => 0,
                'message' => '更新成功',
                'data' => $userRow
            ];
        }else{
            $userData['username']   = $userInfo['nickName'];
            $userData['profile']    = $userInfo['avatarUrl'];
            $userData['wx_openid']  = $row['openid'];
            $userData['city']       = $userInfo['city'];
            $userData['province']   = $userInfo['province'];
            $userData['sex']        = $userInfo['gender'];
            $userData['group_id']   = 1;
            $userData['reg_agent']  = 'WeChat';
            $userData['reg_time']   = time();
            $id = $this->user->insertGetId($userData);
            $result = [
                'error'   => 0,
                'message' => '注册成功',
                'data' => [
                    'username'  => $userData['username'],
                    'province'  => $userData['province'],
                    'profile'   => $userData['profile'],
                    'sex'       => $userInfo['gender'],
                    'wx_openid' => $userData['wx_openid'],
                    'id' => $id,
                ]
            ];
        }



        return json($result);
    }

    /**
     * 通过wechatcode 获取微信授权信息
     * @param $params
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function getUserWeChatInfo( $params = [], $returnJson = true ){

        $params = $params?$params:$this->request->post();
        $system = Db::name('system')->where(['id'=>1])->find();
        $appid=$system['wechat_appid'];
        $secret=$system['wechat_appsecret'];
        $url="https://api.weixin.qq.com/sns/jscode2session?appid=".$appid."&secret=".$secret."&js_code=".$params['code']."&grant_type=authorization_code";
        $row = Helper::getCurl($url,null);
        $row = json_decode($row,true);

        if( $returnJson ){
            $result = [
                'error'   => 0,
                'message' => '获取成功',
                'data' => $row
            ];
            return json($result);

        }else{
            return $row;
        }

    }
    /**
     * 获取用户地理位置信息
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function getUserMap(){
        $location = $this->request->post('location');
        $system = Db::name('system')->where(['id'=>1])->find();
        $url = "https://apis.map.qq.com/ws/geocoder/v1/?location=".$location."&key=".$system['mapkey']."&get_poi=0&coord_type=1";
        $row = Helper::getCurl($url,null);
        $row = json_decode($row,true);
        $result = [
            'error'   => 0,
            'message' => '获取成功',
            'data' =>$row['result']
        ];

        return json($result);
    }
    /**
     * 获取用户手机号
     */
    public function getUserPhone(){
        if( $this->request->isPost()){
            $params = $this->request->post();
        }
        $system         = Db::name('system')->where(['id'=>1])->find();
        $appid          = $system['wechat_appid'];
        $sessionKey     = $params['session_key'];
        $iv             = $params['iv'];
        $encryptedData  = $params['encryptedData'];

        $pc             = new WXBizDataCrypt($appid, $sessionKey);
        $errCode        = $pc->decryptData($encryptedData, $iv, $data );

        if ($errCode == 0) {
            print($data . "\n");
        } else {
            print($errCode . "\n");
        }
    }

    /**
     * 获取用户完全信息
     */
    public function getUserInfo(){
        if( $this->request->isPost()){
            $id = $this->request->post('id');
            $row = $this->user->field('username,profile,nickname,mobile,age,industry,id_card,desc')->where([
                'id'=>$id
            ])->find();
            $result = [
                'error'   => 0,
                'message' => '获取成功',
                'data' =>$row
            ];
            return json($result);
        }
    }

    /**
     * 修改用户信息
     */
    public function updateUserInfo(){
        if( $this->request->isPost()){
            $params = $this->request->post();
            $data = [
                'username'  =>$params['username'],
                'profile'   => $params['profile'],
                'mobile'    => $params['mobile'],
                'id_card'   => $params['id_card'],
                'age'       => $params['age'],
                'desc'      => $params['desc'],
                'industry'  => $params['industry'],
            ];

            $row = $this->user->where(['id'=>$params['id']])->update($data);
            $result = [
                'error'   => 0,
                'message' => '修改成功',
                'data' =>$row
            ];
            return json($result);
        }
    }
}