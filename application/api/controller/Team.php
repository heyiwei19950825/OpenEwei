<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/9/28
 * Time: 14:14
 */

namespace app\api\controller;

use app\common\model\Team as TeamModel;
use app\common\model\TeamUserList;

use think\Db;

class Team extends Base
{
    protected $team;
    protected $teamUserList;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $this->team = new TeamModel();
        $this->teamUserList = new TeamUserList();

    }

    /**
     * 队伍信息编辑和创建
     * @return \think\response\Json
     */
    public function form(){
        if( $this->request->isPost()){
            $params = $this->request->post();
            $row = $this->team->formByApi($params);
            if( $row ){
                //添加自己到报名列表中
                if(!isset( $params['id']) ){
                    $this->teamUserList->save(
                        [
                            'captain_id' =>$params['u_id'],
                            'u_id' => $params['u_id'],
                            't_id' => $row,
                            'from' => 0,
                            'status' => 1
                        ]
                    );
                }
                $result = [
                    'error'   => 0,
                    'message' => '创建成功',
                    'id'=>isset( $params['id'] )? $params['id']:$row
                ];
            }else{
                $result = [
                    'error'   => 1,
                    'message' => '创建失败，请检测网络重新尝试',

                ];
            }

            return json($result);
        }
    }
    /**
     * 获取我参加和我的队伍列表
     */
    public function getList(){
        if( $this->request->isPost()){
            $uId = $this->request->post('u_id');
            $field = 't.logo,t.id,t.name,t.u_id';
            $row = $this->teamUserList->selectTeamListByApi($field ,['u.u_id'=>$uId],1,999);
            foreach ($row as $k=>&$v){
                $v['captain'] = false;
                if($uId == $v['u_id']){
                    $v['captain'] = true;
                }
                $v['member_number'] = $this->teamUserList->where(['t_id'=>$v['id']])->count();
                $v['not_check_number'] = $this->teamUserList->where(['t_id'=>$v['id'],'status'=>0])->count();

            }
            if( $row ){
                $result = [
                    'error'   => 0,
                    'message' => '查询成功',
                    'data'=>$row
                ];
            }else{
                $result = [
                    'error'   => 1,
                    'message' => '查询失败，请检测网络重新尝试',

                ];
            }
            return json($result);
        }
    }

    /**
     * 获取我创建的队伍列表
     */
    public function getMyList(){
        if( $this->request->isPost()){
            $uId = $this->request->post('u_id');

            $row = $this->team->where(['u_id'=>$uId])->field('name,logo,id,u_id')->order('id desc')->select();
            foreach ($row as $k=>&$v){
                $v['captain'] = false;
                if($uId == $v['u_id']){
                    $v['captain'] = true;
                }
                $v['member_number'] = $this->teamUserList->where(['t_id'=>$v['id'],'status'=>1])->count();
                $v['not_check_number'] = $this->teamUserList->where(['t_id'=>$v['id'],'status'=>0])->count();

            }
            if( $row ){
                $result = [
                    'error'   => 0,
                    'message' => '查询成功',
                    'data'=>$row
                ];
            }else{
                $result = [
                    'error'   => 1,
                    'message' => '查询失败，请检测网络重新尝试',

                ];
            }
            return json($result);
        }
    }

    /**
     * 获取队员列表
     */
    public function userList(){
        if( $this->request->isPost()){
            $id = $this->request->post('id');
            $status = $this->request->post('status');

            $field = 'u.username,u.profile,tu.create_time,tu.from,tu.apply_reason,tu.id,t.u_id,tu.join_number';
            $row = $this->team->selectUserListByApi($field ,['t.id'=>$id,'tu.status'=>$status],1,10);

            if( $row ){
                $result = [
                    'error'   => 0,
                    'message' => '查询成功',
                    'data'=>$row
                ];
            }else{
                $result = [
                    'error'   => 1,
                    'message' => '查询失败，请检测网络重新尝试',

                ];
            }
            return json($result);
        }
    }

    /**
     * 修改队员状态
     */
    public function userUpdate(){
        if( $this->request->isPost()){
            $id = $this->request->post('id');
            $status = $this->request->post('status');
            $u_id = $this->request->post('u_id');
            $row = $this->teamUserList->where([
                'captain_id'=>$u_id,
                'id'=>$id
            ])->update(['status'=>$status]);

            if( $row ){
                $result = [
                    'error'   => 0,
                    'message' => '查询成功',
                    'data'=>$row
                ];
            }else{
                $result = [
                    'error'   => 1,
                    'message' => '查询失败，请检测网络重新尝试',

                ];
            }
            return json($result);
        }
    }

    /**
     * 获取队伍详情信息
     */
    public function info(){
        if( $this->request->isPost()){
            $id     = $this->request->post('id');
            $u_id   = $this->request->post('u_id');

            $row = $this->team->where(['id'=>$id])->find();
            $isset = $this->teamUserList->where(['t_id'=>$id,'u_id'=>$u_id])->find();
            $row['isset'] = $isset?true:false;

            if( $row ){
                $result = [
                    'error'   => 0,
                    'message' => '查询成功',
                    'data'    =>$row
                ];
            }else{
                $result = [
                    'error'   => 1,
                    'message' => '查询失败，请检测网络重新尝试',

                ];
            }
            return json($result);
        }
    }

    /**
     * 申请入队
     */
    public function apply(){
        if( $this->request->isPost()){
            $params = $this->request->post();
            $row = $this->teamUserList->save($params);
            if( $row ){
                $result = [
                    'error'   => 0,
                    'message' => '申请成功',
                ];
            }else{
                $result = [
                    'error'   => 1,
                    'message' => '查询失败，请检测网络重新尝试',

                ];
            }
            return json($result);
        }
    }
}